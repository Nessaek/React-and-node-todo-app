{"ast":null,"code":"var _jsxFileName = \"/Users/nessa.kennedy/myprojects/todos/client/src/components/ShowTodos.tsx\";\nimport * as React from \"react\";\nimport { forwardRef, useCallback, useEffect } from \"react\";\nimport { deleteTodoById, getTodos, updateTodo } from \"../api/requests\";\nimport { TextField } from \"@material-ui/core\";\nimport MaterialTable from \"material-table\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Button from \"@material-ui/core/Button\";\nimport { AddTodo } from \"./AddTodo\";\nexport default function ShowTodos() {\n  const [todos, setTodos] = React.useState([]);\n  const [selectedTodo, setSelectedTodo] = React.useState({\n    _id: \"\",\n    name: \"\",\n    text: \"\",\n    status: false,\n    createdAt: \"\"\n  });\n  const [dialogState, setDialogState] = React.useState(false);\n  const headers = [{\n    title: 'name',\n    field: 'name'\n  }, {\n    title: 'description',\n    field: 'text'\n  }, {\n    title: 'created at',\n    field: 'createdAt',\n    defaultSort: \"desc\"\n  }];\n  const tableIcons = {\n    Delete: forwardRef((props, ref) => /*#__PURE__*/React.createElement(DeleteIcon, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 40\n      }\n    })))\n  };\n  const handleStateChange = useCallback(newTodo => setTodos([...todos, newTodo]), [todos]);\n\n  const handleChange = event => {\n    console.log(event.target);\n    this.setState({\n      todo: event.target.value\n    });\n  };\n\n  useEffect(() => {\n    getTodos().then(({\n      data: {\n        todos\n      }\n    }) => {\n      setTodos(todos);\n    }).catch(err => console.log(err));\n  }, []);\n\n  const handleUpdate = todo => {\n    updateTodo(todo).then(updatedTodo => setTodos(todos.map(todo => todo._id === updatedTodo._id ? updatedTodo : todo))).catch(err => console.log(err));\n  };\n\n  const handleDelete = id => {\n    deleteTodoById(id).then(id => setTodos(todos.filter(({\n      _id: i\n    }) => id !== i))).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AddTodo, {\n    onAdd: handleStateChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(MaterialTable, {\n    title: \"To Dos\",\n    columns: headers,\n    data: todos,\n    icons: tableIcons,\n    options: {\n      pageSize: 20,\n      sorting: true\n    },\n    onRowClick: (event, rowData) => {\n      setDialogState(true);\n      setSelectedTodo({\n        _id: rowData._id,\n        name: rowData.name,\n        text: rowData.text,\n        status: rowData.status,\n        createdAt: rowData.createdAt\n      });\n    },\n    actions: [{\n      icon: DeleteIcon,\n      tooltip: 'Delete Item',\n      onClick: (event, rowData) => {\n        window.confirm(\"You want to delete \" + rowData.name + \"?\");\n        handleDelete(rowData._id);\n      }\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Dialog, {\n    open: dialogState,\n    onClose: () => setDialogState(false),\n    onEnter: () => setSelectedTodo(selectedTodo),\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, \"Update\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    defaultValue: selectedTodo.text,\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"name\",\n    fullWidth: true,\n    onChange: event => {\n      const {\n        value\n      } = event.target;\n      console.log(value);\n      selectedTodo.text = value;\n      setSelectedTodo(selectedTodo);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: () => setDialogState(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: () => {\n      handleUpdate(selectedTodo);\n      setDialogState(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, \"Update\"))));\n}","map":{"version":3,"sources":["/Users/nessa.kennedy/myprojects/todos/client/src/components/ShowTodos.tsx"],"names":["React","forwardRef","useCallback","useEffect","deleteTodoById","getTodos","updateTodo","TextField","MaterialTable","Dialog","DialogTitle","DialogContent","DialogActions","DeleteIcon","Button","AddTodo","ShowTodos","todos","setTodos","useState","selectedTodo","setSelectedTodo","_id","name","text","status","createdAt","dialogState","setDialogState","headers","title","field","defaultSort","tableIcons","Delete","props","ref","handleStateChange","newTodo","handleChange","event","console","log","target","setState","todo","value","then","data","catch","err","handleUpdate","updatedTodo","map","handleDelete","id","filter","i","pageSize","sorting","rowData","icon","tooltip","onClick","window","confirm"],"mappings":"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","sourcesContent":["import * as React from \"react\"\nimport {forwardRef, useCallback, useEffect} from \"react\"\nimport {ITodo} from \"../types/type.todo\"\nimport {deleteTodoById, getTodos, updateTodo} from \"../api/requests\"\nimport {TextField} from \"@material-ui/core\"\nimport MaterialTable, {Icons} from \"material-table\"\nimport Dialog from \"@material-ui/core/Dialog\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport DialogActions from \"@material-ui/core/DialogActions\"\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Button from \"@material-ui/core/Button\"\nimport {useConfirm} from \"material-ui-confirm\"\nimport {AddTodo} from \"./AddTodo\"\n\nexport default function ShowTodos () {\n\n  const [todos, setTodos] = React.useState<ITodo[]>([]);\n\n  const [selectedTodo, setSelectedTodo] = React.useState<ITodo>({\n    _id: \"\",\n    name: \"\",\n    text: \"\",\n    status: false,\n    createdAt: \"\"\n  });\n\n  const [dialogState, setDialogState] = React.useState<boolean>(false);\n\n  const headers = [\n    { title: 'name', field: 'name'},\n    { title: 'description', field: 'text'},\n    { title: 'created at', field: 'createdAt', defaultSort:\"desc\" as const}\n  ]\n\n\n  const tableIcons: Icons = {\n    Delete: forwardRef((props, ref) => <DeleteIcon {...props} ref={ref} />)\n\n  }\n\n  const handleStateChange = useCallback( newTodo =>\n      setTodos([...todos, newTodo]), [todos]\n  )\n\n  const handleChange = (event) => {\n    console.log(event.target)\n    this.setState({\n      todo: event.target.value,\n    });\n  };\n\n  useEffect(() => {\n      getTodos()\n      .then(({data: {todos}}: ITodo[] | any) => {\n        setTodos(todos)\n      })\n      .catch((err: Error) => console.log(err))\n  }, [])\n\n  const handleUpdate = (todo: ITodo) => {\n    updateTodo(todo)\n    .then(updatedTodo => setTodos(todos.map((todo)=> todo._id === updatedTodo._id ? updatedTodo: todo)))\n    .catch((err: Error) => console.log(err))\n\n  }\n\n  const handleDelete = (id: string) => {\n    deleteTodoById(id)\n    .then(id =>  setTodos(todos.filter(({ _id: i }) => id !== i)))\n    .catch((err: Error) => console.log(err))\n\n  }\n        return (\n            <>\n              <AddTodo onAdd={handleStateChange} />\n      <MaterialTable title=\"To Dos\" columns={headers} data={todos}\n                     icons={tableIcons}\n                     options={{\n                       pageSize:20,\n                       sorting:true\n                     }}\n                     onRowClick={(event, rowData) => {\n\n                      setDialogState(true);\n                     setSelectedTodo({_id: rowData._id,\n                       name: rowData.name,\n                       text: rowData.text,\n                       status: rowData.status,\n                       createdAt: rowData.createdAt\n                     })\n                     }}\n                     actions={[\n                       {\n                         icon: DeleteIcon,\n                         tooltip: 'Delete Item',\n                         onClick: (event, rowData: ITodo) => {\n                           window.confirm(\"You want to delete \" + rowData.name + \"?\");\n                           handleDelete(rowData._id)\n\n                         }\n                       }\n                     ]}\n      />\n\n  <Dialog\n      open={dialogState}\n      onClose={() => setDialogState(false)}\n      onEnter={() => setSelectedTodo(selectedTodo)}\n      aria-labelledby=\"form-dialog-title\"\n  >\n    <DialogTitle id=\"form-dialog-title\">Update</DialogTitle>\n    <DialogContent>\n      <TextField\n          defaultValue={selectedTodo.text}\n          autoFocus\n          margin=\"dense\"\n          id=\"name\"\n          fullWidth\n          onChange={event => {\n            const { value } = event.target;\n            console.log(value)\n            selectedTodo.text = value\n              setSelectedTodo(selectedTodo)} }\n      />\n    </DialogContent>\n    <DialogActions>\n      <Button color=\"primary\" onClick={() => setDialogState(false)}>\n        Cancel\n      </Button>\n      <Button color=\"primary\" onClick={() => {\n        handleUpdate(selectedTodo)\n        setDialogState(false)\n      }}>\n        Update\n      </Button>\n    </DialogActions>\n  </Dialog>\n</>\n  );\n\n}"]},"metadata":{},"sourceType":"module"}