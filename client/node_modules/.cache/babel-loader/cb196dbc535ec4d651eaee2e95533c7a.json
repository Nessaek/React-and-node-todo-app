{"ast":null,"code":"var _jsxFileName = \"/Users/nessa.kennedy/myprojects/todos/client/src/components/TodoItem.tsx\";\nimport { TextField } from \"@material-ui/core\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport * as React from \"react\";\nimport { deleteTodoById, updateTodo } from \"../api/requests\";\nimport { useConfirm } from \"material-ui-confirm\";\nexport const TodoItem = ({\n  todo,\n  itemKey,\n  onDelete\n}) => {\n  const [dialogState, setDialogState] = React.useState(false);\n  const confirm = useConfirm();\n\n  const handleConfirmation = id => {\n    confirm({\n      description: 'This action is permanent!'\n    }).then(() => deleteTodoById(id)).then(id => onDelete(id)).then(() => setDialogState(false)).catch(err => console.log(err));\n  };\n\n  const handleUpdate = todo => {\n    confirm({\n      description: 'This action is permanent!'\n    }).then(() => updateTodo(todo)).then(id => onDelete(id)).then(() => setDialogState(false)).catch(err => console.log(err));\n  };\n\n  const handleClose = () => {\n    setDialogState(false);\n  };\n\n  return /*#__PURE__*/React.createElement(Dialog, {\n    open: dialogState,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"Update\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    defaultValue: todo.text,\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"name\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: () => handleUpdate(todo),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Update\")));\n};","map":{"version":3,"sources":["/Users/nessa.kennedy/myprojects/todos/client/src/components/TodoItem.tsx"],"names":["TextField","Dialog","DialogTitle","DialogContent","DialogActions","Button","React","deleteTodoById","updateTodo","useConfirm","TodoItem","todo","itemKey","onDelete","dialogState","setDialogState","useState","confirm","handleConfirmation","id","description","then","catch","err","console","log","handleUpdate","handleClose","text"],"mappings":";AAAA,SAAsBA,SAAtB,QAAsC,mBAAtC;AAGA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAAQC,cAAR,EAAwBC,UAAxB,QAAyC,iBAAzC;AACA,SAASC,UAAT,QAA2B,qBAA3B;AAUA,OAAO,MAAMC,QAAyB,GAAG,CAAE;AAACC,EAAAA,IAAD;AAAOC,EAAAA,OAAP;AAAgBC,EAAAA;AAAhB,CAAF,KAAgC;AACvE,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,KAAK,CAACU,QAAN,CAAwB,KAAxB,CAAtC;AAEA,QAAMC,OAAO,GAAGR,UAAU,EAA1B;;AAEA,QAAMS,kBAAkB,GAAIC,EAAD,IAAgB;AAEzCF,IAAAA,OAAO,CAAC;AAAEG,MAAAA,WAAW,EAAE;AAAf,KAAD,CAAP,CACCC,IADD,CACM,MAAOd,cAAc,CAACY,EAAD,CAD3B,EAECE,IAFD,CAEMF,EAAE,IAAIN,QAAQ,CAACM,EAAD,CAFpB,EAGCE,IAHD,CAGM,MAAMN,cAAc,CAAC,KAAD,CAH1B,EAICO,KAJD,CAIQC,GAAD,IAAgBC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJvB;AAOD,GATD;;AAWA,QAAMG,YAAY,GAAIf,IAAD,IAAiB;AAEpCM,IAAAA,OAAO,CAAC;AAAEG,MAAAA,WAAW,EAAE;AAAf,KAAD,CAAP,CACCC,IADD,CACM,MAAOb,UAAU,CAACG,IAAD,CADvB,EAECU,IAFD,CAEMF,EAAE,IAAIN,QAAQ,CAACM,EAAD,CAFpB,EAGCE,IAHD,CAGM,MAAMN,cAAc,CAAC,KAAD,CAH1B,EAICO,KAJD,CAIQC,GAAD,IAAgBC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJvB;AAOD,GATD;;AAWA,QAAMI,WAAW,GAAG,MAAM;AACxBZ,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GAFD;;AAIA,sBACM,oBAAC,MAAD;AACI,IAAA,IAAI,EAAED,WADV;AAEI,IAAA,OAAO,EAAEa,WAFb;AAGI,uBAAgB,mBAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACI,IAAA,YAAY,EAAEhB,IAAI,CAACiB,IADvB;AAEI,IAAA,SAAS,MAFb;AAGI,IAAA,MAAM,EAAC,OAHX;AAII,IAAA,EAAE,EAAC,MAJP;AAKI,IAAA,SAAS,MALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,eAeE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAED,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAE,MAAMD,YAAY,CAACf,IAAD,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CAfF,CADN;AA2BD,CA1DM","sourcesContent":["import {ListItemText, TextField} from \"@material-ui/core\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport DeleteIcon from \"@material-ui/icons/Delete\"\nimport Dialog from \"@material-ui/core/Dialog\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport DialogActions from \"@material-ui/core/DialogActions\"\nimport Button from \"@material-ui/core/Button\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport * as React from \"react\"\nimport {deleteTodoById, updateTodo} from \"../api/requests\"\nimport { useConfirm } from \"material-ui-confirm\"\nimport {ITodo} from \"../types/type.todo\"\nimport TableCell from \"@material-ui/core/TableCell\"\n\ntype Props =  {\n  todo: ITodo,\n  itemKey: number,\n  onDelete: (id: string) => void\n}\n\nexport const TodoItem: React.FC<Props> = ( {todo, itemKey, onDelete}) => {\n  const [dialogState, setDialogState] = React.useState<boolean>(false);\n\n  const confirm = useConfirm();\n\n  const handleConfirmation = (id: string) => {\n\n    confirm({ description: 'This action is permanent!' })\n    .then(() =>  deleteTodoById(id))\n    .then(id => onDelete(id))\n    .then(() => setDialogState(false))\n    .catch((err: Error) => console.log(err))\n\n\n  }\n\n  const handleUpdate = (todo: ITodo) => {\n\n    confirm({ description: 'This action is permanent!' })\n    .then(() =>  updateTodo(todo))\n    .then(id => onDelete(id))\n    .then(() => setDialogState(false))\n    .catch((err: Error) => console.log(err))\n\n\n  }\n\n  const handleClose = () => {\n    setDialogState(false);\n  };\n\n  return (\n        <Dialog\n            open={dialogState}\n            onClose={handleClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Update</DialogTitle>\n          <DialogContent>\n            <TextField\n                defaultValue={todo.text}\n                autoFocus\n                margin=\"dense\"\n                id=\"name\"\n                fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button color=\"primary\" onClick={handleClose}>\n              Cancel\n            </Button>\n            <Button color=\"primary\" onClick={() => handleUpdate(todo)}>\n              Update\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n  )\n}"]},"metadata":{},"sourceType":"module"}