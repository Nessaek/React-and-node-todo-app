{"ast":null,"code":"var _jsxFileName = \"/Users/nessa.kennedy/myprojects/todos/client/src/components/ShowTodos.tsx\";\nimport * as React from \"react\";\nimport { useCallback, useEffect } from \"react\";\nimport { getTodos } from \"../api/requests\";\nimport { AddTodo } from \"./AddTodo\";\nimport { TableHead } from \"@material-ui/core\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport MaterialTable from \"material-table\";\nexport default function ShowTodos() {\n  const [todos, setTodos] = React.useState([]);\n  const headers = [{\n    title: 'name',\n    field: 'Name'\n  }, {\n    title: 'description',\n    field: 'Description'\n  }, {\n    title: 'createdAt',\n    field: 'Created At'\n  }];\n  const handleStateChange = useCallback(id => setTodos(todos.filter(todo => todo._id !== id)), [todos]);\n  const updateTodos = useCallback(todo => setTodos(todos.concat(todo)), [todos]);\n  useEffect(() => {\n    getTodos().then(({\n      data: {\n        todos\n      }\n    }) => {\n      const todoList = todos;\n      setTodos(todoList);\n    }).catch(err => console.log(err));\n  }, []);\n\n  const headerFunc = () => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AddTodo, {\n      onAdd: updateTodos,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, headers.map(header => /*#__PURE__*/React.createElement(TableCell, {\n      key: header.id,\n      align: header.numeric ? 'right' : 'left',\n      padding: header.disablePadding ? 'none' : 'default',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableSortLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }\n    }, header.label))))));\n  };\n\n  return /*#__PURE__*/React.createElement(MaterialTable, {\n    columns: headers,\n    data: todos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  });\n}","map":{"version":3,"sources":["/Users/nessa.kennedy/myprojects/todos/client/src/components/ShowTodos.tsx"],"names":["React","useCallback","useEffect","getTodos","AddTodo","TableHead","TableRow","TableCell","TableSortLabel","MaterialTable","ShowTodos","todos","setTodos","useState","headers","title","field","handleStateChange","id","filter","todo","_id","updateTodos","concat","then","data","todoList","catch","err","console","log","headerFunc","map","header","numeric","disablePadding","label"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAQC,WAAR,EAAqBC,SAArB,QAAqC,OAArC;AAEA,SAAQC,QAAR,QAAuB,iBAAvB;AACA,SAAQC,OAAR,QAAsB,WAAtB;AACA,SAAQC,SAAR,QAAwB,mBAAxB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AAEA,eAAe,SAASC,SAAT,GAAsB;AAEnC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,KAAK,CAACa,QAAN,CAAwB,EAAxB,CAA1B;AAEA,QAAMC,OAAO,GAAG,CACd;AAAEC,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,KAAK,EAAE;AAAxB,GADc,EAEd;AAAED,IAAAA,KAAK,EAAE,aAAT;AAAwBC,IAAAA,KAAK,EAAE;AAA/B,GAFc,EAGd;AAAED,IAAAA,KAAK,EAAE,WAAT;AAAsBC,IAAAA,KAAK,EAAE;AAA7B,GAHc,CAAhB;AAMA,QAAMC,iBAAiB,GAAGhB,WAAW,CAAEiB,EAAE,IACrCN,QAAQ,CAACD,KAAK,CAACQ,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaH,EAAlC,CAAD,CADyB,EACgB,CAACP,KAAD,CADhB,CAArC;AAIA,QAAMW,WAAW,GAAGrB,WAAW,CAAEmB,IAAI,IACjCR,QAAQ,CAACD,KAAK,CAACY,MAAN,CAAaH,IAAb,CAAD,CADmB,EACG,CAACT,KAAD,CADH,CAA/B;AAKAT,EAAAA,SAAS,CAAC,MAAM;AAEZC,IAAAA,QAAQ,GACPqB,IADD,CACM,CAAC;AAACC,MAAAA,IAAI,EAAE;AAACd,QAAAA;AAAD;AAAP,KAAD,KAAoC;AACxC,YAAMe,QAAQ,GAAGf,KAAjB;AACDC,MAAAA,QAAQ,CAACc,QAAD,CAAR;AACA,KAJD,EAKCC,KALD,CAKQC,GAAD,IAAgBC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALvB;AAMH,GARQ,EAQN,EARM,CAAT;;AAWF,QAAMG,UAAU,GAAG,MAAM;AACvB,wBACI,uDACE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAET,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGR,OAAO,CAACkB,GAAR,CAAaC,MAAD,iBACT,oBAAC,SAAD;AACI,MAAA,GAAG,EAAEA,MAAM,CAACf,EADhB;AAEI,MAAA,KAAK,EAAEe,MAAM,CAACC,OAAP,GAAiB,OAAjB,GAA2B,MAFtC;AAGI,MAAA,OAAO,EAAED,MAAM,CAACE,cAAP,GAAwB,MAAxB,GAAiC,SAH9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGGF,MAAM,CAACG,KAHV,CALF,CADH,CADH,CADF,CAFF,CADJ;AAuBO,GAxBT;;AA0BQ,sBACF,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAEtB,OAAxB;AAAiC,IAAA,IAAI,EAAEH,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADE;AAKP","sourcesContent":["import * as React from \"react\"\nimport {useCallback, useEffect} from \"react\"\nimport {ITodo} from \"../types/type.todo\"\nimport {getTodos} from \"../api/requests\"\nimport {AddTodo} from \"./AddTodo\"\nimport {TableHead} from \"@material-ui/core\"\nimport TableRow from \"@material-ui/core/TableRow\"\nimport TableCell from \"@material-ui/core/TableCell\"\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\"\nimport MaterialTable from \"material-table\"\n\nexport default function ShowTodos () {\n\n  const [todos, setTodos] = React.useState<ITodo[]>([]);\n\n  const headers = [\n    { title: 'name', field: 'Name'},\n    { title: 'description', field: 'Description'},\n    { title: 'createdAt', field: 'Created At'}\n  ]\n\n  const handleStateChange = useCallback( id =>\n      setTodos(todos.filter(todo => todo._id !== id)), [todos]\n  )\n\n  const updateTodos = useCallback( todo =>\n      setTodos(todos.concat(todo)), [todos]\n  )\n\n\n  useEffect(() => {\n\n      getTodos()\n      .then(({data: {todos}}: ITodo[] | any) => {\n        const todoList = todos\n       setTodos(todoList)\n      })\n      .catch((err: Error) => console.log(err))\n  }, [])\n\n\nconst headerFunc = () => {\n  return (\n      <>\n        <AddTodo onAdd={updateTodos}/>\n        <TableHead>\n          <TableRow>\n            {headers.map((header) => (\n                <TableCell\n                    key={header.id}\n                    align={header.numeric ? 'right' : 'left'}\n                    padding={header.disablePadding ? 'none' : 'default'}\n                >\n                  <TableSortLabel\n\n                  >\n                    {header.label}\n                  </TableSortLabel>\n                </TableCell>\n            ))}\n\n          </TableRow>\n        </TableHead>\n        </>\n        )\n        }\n\n        return (\n      <MaterialTable columns={headers} data={todos}/>\n\n  );\n\n}"]},"metadata":{},"sourceType":"module"}