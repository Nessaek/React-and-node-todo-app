{"ast":null,"code":"var _jsxFileName = \"/Users/nessa.kennedy/myprojects/todos/client/src/components/ShowTodos.tsx\";\nimport * as React from \"react\";\nimport { useCallback, useEffect } from \"react\";\nimport { getTodos } from \"../api/requests\";\nimport { TodoItem } from \"./TodoItem\";\nimport { AddTodo } from \"./AddTodo\";\nimport { TableHead } from \"@material-ui/core\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport TableBody from \"@material-ui/core/TableBody\";\nexport default function ShowTodos() {\n  const [todos, setTodos] = React.useState([]);\n  const headers = [{\n    id: 'name',\n    numeric: false,\n    disablePadding: true,\n    label: 'Name'\n  }, {\n    id: 'description',\n    numeric: false,\n    disablePadding: true,\n    label: 'Description'\n  }, {\n    id: 'createdAt',\n    numeric: false,\n    disablePadding: true,\n    label: 'Created At'\n  }];\n  const handleStateChange = useCallback(id => setTodos(todos.filter(todo => todo._id !== id)), [todos]);\n  const updateTodos = useCallback(todo => setTodos(todos.concat(todo)), [todos]);\n  useEffect(() => {\n    getTodos().then(({\n      data: {\n        todos\n      }\n    }) => {\n      const todoList = todos;\n      setTodos(todoList);\n    }).catch(err => console.log(err));\n  }, []);\n\n  const headerFunc = () => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AddTodo, {\n      onAdd: updateTodos,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, headers.map(header => /*#__PURE__*/React.createElement(TableCell, {\n      key: header.id,\n      align: header.numeric ? 'right' : 'left',\n      padding: header.disablePadding ? 'none' : 'default',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableSortLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }\n    }, header.label))))));\n  };\n\n  return /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, todos.map((todo, key) => /*#__PURE__*/React.createElement(TodoItem, {\n    todo: todo,\n    itemKey: key,\n    onDelete: handleStateChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/nessa.kennedy/myprojects/todos/client/src/components/ShowTodos.tsx"],"names":["React","useCallback","useEffect","getTodos","TodoItem","AddTodo","TableHead","TableRow","TableCell","TableSortLabel","TableBody","ShowTodos","todos","setTodos","useState","headers","id","numeric","disablePadding","label","handleStateChange","filter","todo","_id","updateTodos","concat","then","data","todoList","catch","err","console","log","headerFunc","map","header","key"],"mappings":"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","sourcesContent":["import * as React from \"react\"\nimport {useCallback, useEffect} from \"react\"\nimport List from \"@material-ui/core/List\"\nimport {ITodo} from \"../types/type.todo\"\nimport {getTodos} from \"../api/requests\"\nimport {TodoItem} from \"./TodoItem\"\nimport { AddTodo } from \"./AddTodo\"\nimport {TableHead} from \"@material-ui/core\"\nimport TableRow from \"@material-ui/core/TableRow\"\nimport TableCell from \"@material-ui/core/TableCell\"\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\"\nimport TableBody from \"@material-ui/core/TableBody\"\n\nexport default function ShowTodos () {\n\n  const [todos, setTodos] = React.useState<ITodo[]>([]);\n\n  const headers = [\n    { id: 'name', numeric: false, disablePadding: true, label: 'Name'},\n    { id: 'description', numeric: false, disablePadding: true, label: 'Description'},\n    { id: 'createdAt', numeric: false, disablePadding: true, label: 'Created At'}\n  ]\n\n  const handleStateChange = useCallback( id =>\n      setTodos(todos.filter(todo => todo._id !== id)), [todos]\n  )\n\n  const updateTodos = useCallback( todo =>\n      setTodos(todos.concat(todo)), [todos]\n  )\n\n\n  useEffect(() => {\n\n      getTodos()\n      .then(({data: {todos}}: ITodo[] | any) => {\n        const todoList = todos\n       setTodos(todoList)\n      })\n      .catch((err: Error) => console.log(err))\n  }, [])\n\n\nconst headerFunc = () => {\n  return (\n      <>\n        <AddTodo onAdd={updateTodos}/>\n        <TableHead>\n          <TableRow>\n            {headers.map((header) => (\n                <TableCell\n                    key={header.id}\n                    align={header.numeric ? 'right' : 'left'}\n                    padding={header.disablePadding ? 'none' : 'default'}\n                >\n                  <TableSortLabel\n\n                  >\n                    {header.label}\n                  </TableSortLabel>\n                </TableCell>\n            ))}\n\n          </TableRow>\n        </TableHead>\n        </>\n        )\n        }\n\n        return (\n      <Table>\n        <TableBody>\n\n        {todos.map((todo: ITodo, key ) =>\n              <TodoItem todo={todo} itemKey={key} onDelete={handleStateChange}/>\n        )}\n        </TableBody>\n      </Table>\n  );\n\n}"]},"metadata":{},"sourceType":"module"}