{"ast":null,"code":"import axios from 'axios';\nconst api = 'http://localhost:4000';\n\nconst getTodos = async () => {\n  return await axios.get(api + '/todos');\n};\n\nconst addTodo = async (formData) => {\n  const todo = {\n    name: formData.name,\n    text: formData.text,\n    status: false,\n    createdAt: formData.createdAt\n  };\n  return await axios.post(api + \"/add\", todo).then(response => {\n    console.log(response);\n  }, error => {\n    console.log(error.message); // throw new Error(error)\n  });\n};\n\nconst updateTodo = async (formData) => {\n  const todo = {\n    text: formData.text,\n    updatedAt: formData.updatedAt\n  };\n  return await axios.post(api + \"/edit/\" + formData._id, todo).then(response => {\n    console.log(response);\n  }, error => {\n    console.log(error.message); // throw new Error(error)\n  });\n};\n\nconst deleteTodoById = async (id) => {\n  return await axios.delete(api + \"/delete/\" + id).then(response => {\n    console.log(response);\n    return response.dataid;\n  }, error => {\n    console.log(error.message); // throw new Error(error)\n  });\n};\n\nexport { getTodos, addTodo, updateTodo, deleteTodoById };","map":{"version":3,"sources":["/Users/nessa.kennedy/myprojects/todos/client/src/api/requests.ts"],"names":["axios","api","getTodos","get","addTodo","formData","todo","name","text","status","createdAt","post","then","response","console","log","error","message","updateTodo","updatedAt","_id","deleteTodoById","id","delete","dataid"],"mappings":"AAAA,OAAOA,KAAP,MAA+C,OAA/C;AAGA,MAAMC,GAAG,GAAG,uBAAZ;;AAEA,MAAMC,QAAQ,GAAG,YAA6C;AAC7D,SAAO,MAAMF,KAAK,CAACG,GAAN,CACNF,GAAG,GAAG,QADA,CAAb;AAIA,CALD;;AAQA,MAAMG,OAAO,GAAG,OACZC,QADY,KAEI;AAChB,QAAMC,IAAwB,GAAG;AAC/BC,IAAAA,IAAI,EAAEF,QAAQ,CAACE,IADgB;AAE/BC,IAAAA,IAAI,EAAEH,QAAQ,CAACG,IAFgB;AAG/BC,IAAAA,MAAM,EAAE,KAHuB;AAI/BC,IAAAA,SAAS,EAAEL,QAAQ,CAACK;AAJW,GAAjC;AAMA,SAAO,MAAMV,KAAK,CAACW,IAAN,CACTV,GAAG,GAAG,MADG,EACKK,IADL,EAEXM,IAFW,CAELC,QAAQ,IAAI;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAED,GALQ,EAMTG,KAAD,IAAuB;AACxBF,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACC,OAAlB,EADwB,CAExB;AACD,GATY,CAAb;AAWD,CApBH;;AAsBA,MAAMC,UAAU,GAAG,OACfb,QADe,KAEC;AAClB,QAAMC,IAAuC,GAAG;AAC9CE,IAAAA,IAAI,EAAEH,QAAQ,CAACG,IAD+B;AAE9CW,IAAAA,SAAS,EAAEd,QAAQ,CAACc;AAF0B,GAAhD;AAIA,SAAO,MAAMnB,KAAK,CAACW,IAAN,CACTV,GAAG,GAAG,QAAN,GAAiBI,QAAQ,CAACe,GADjB,EAETd,IAFS,EAGXM,IAHW,CAGLC,QAAQ,IAAI;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAED,GANQ,EAOTG,KAAD,IAAuB;AACxBF,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACC,OAAlB,EADwB,CAExB;AACD,GAVY,CAAb;AAYD,CAnBD;;AAqBA,MAAMI,cAAc,GAAG,OACnBC,EADmB,KAED;AAEpB,SAAO,MAAMtB,KAAK,CAACuB,MAAN,CACTtB,GAAG,GAAG,UAAN,GAAmBqB,EADV,EAEXV,IAFW,CAELC,QAAQ,IAAI;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,WAAOA,QAAQ,CAACW,MAAhB;AACA,GALQ,EAMTR,KAAD,IAAuB;AACxBF,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACC,OAAlB,EADwB,CAExB;AACD,GATY,CAAb;AAWD,CAfD;;AAmBA,SACEf,QADF,EAEEE,OAFF,EAGIc,UAHJ,EAIIG,cAJJ","sourcesContent":["import axios, {AxiosError, AxiosResponse} from 'axios'\nimport {ITodo} from \"../types/type.todo\"\n\nconst api = 'http://localhost:4000'\n\nconst getTodos = async (): Promise<AxiosResponse<ITodo[]>> => {\n return await axios.get(\n        api + '/todos'\n    )\n\n}\n\n\nconst addTodo = async (\n    formData: ITodo\n): Promise<void> => {\n    const todo: Omit<ITodo, '_id'> = {\n      name: formData.name,\n      text: formData.text,\n      status: false,\n      createdAt: formData.createdAt\n      }\n    return await axios.post(\n        api + \"/add\", todo\n    ).then((response => {\n          console.log(response)\n\n        }\n    ), (error: AxiosError) => {\n      console.log(error.message)\n      // throw new Error(error)\n    })\n\n  }\n\nconst updateTodo = async (\n    formData: ITodo\n): Promise<void> => {\n  const todo: Pick<ITodo, 'text' | 'updatedAt'> = {\n    text: formData.text,\n    updatedAt: formData.updatedAt\n  }\n  return await axios.post(\n      api + \"/edit/\" + formData._id,\n      todo\n  ).then((response => {\n        console.log(response)\n\n      }\n  ), (error: AxiosError) => {\n    console.log(error.message)\n    // throw new Error(error)\n  })\n\n}\n\nconst deleteTodoById = async (\n    id: string\n): Promise<string> => {\n\n  return await axios.delete(\n      api + \"/delete/\" + id\n  ).then((response => {\n        console.log(response);\n       return response.dataid\n      }\n  ), (error: AxiosError) => {\n    console.log(error.message)\n    // throw new Error(error)\n  })\n\n}\n\n\n\nexport {\n  getTodos,\n  addTodo,\n    updateTodo,\n    deleteTodoById\n}"]},"metadata":{},"sourceType":"module"}