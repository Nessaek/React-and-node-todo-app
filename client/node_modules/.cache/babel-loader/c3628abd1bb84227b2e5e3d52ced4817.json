{"ast":null,"code":"var _jsxFileName = \"/Users/nessa.kennedy/myprojects/todos/client/src/components/ShowTodos.tsx\";\nimport * as React from \"react\";\nimport { useCallback, useEffect } from \"react\";\nimport { getTodos } from \"../api/requests\";\nimport MaterialTable from \"material-table\";\nimport { SelectedRow } from \"./SelectedRow\";\nexport default function ShowTodos() {\n  const [todos, setTodos] = React.useState([]);\n  const [dialogState, setDialogState] = React.useState(true);\n  const headers = [{\n    title: 'name',\n    field: 'name'\n  }, {\n    title: 'description',\n    field: 'text'\n  }, {\n    title: 'created at',\n    field: 'createdAt'\n  }];\n  const handleStateChange = useCallback(id => setTodos(todos.filter(todo => todo._id !== id)), [todos]);\n  const updateTodos = useCallback(todo => setTodos(todos.concat(todo)), [todos]);\n  useEffect(() => {\n    getTodos().then(({\n      data: {\n        todos\n      }\n    }) => {\n      const todoList = todos;\n      setTodos(todoList);\n    }).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/React.createElement(MaterialTable, {\n    title: \"To Dos\",\n    columns: headers,\n    data: todos,\n    onRowClick: (event, selectedRow) => SelectedRow(selectedRow),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  });\n}","map":{"version":3,"sources":["/Users/nessa.kennedy/myprojects/todos/client/src/components/ShowTodos.tsx"],"names":["React","useCallback","useEffect","getTodos","MaterialTable","SelectedRow","ShowTodos","todos","setTodos","useState","dialogState","setDialogState","headers","title","field","handleStateChange","id","filter","todo","_id","updateTodos","concat","then","data","todoList","catch","err","console","log","event","selectedRow"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAQC,WAAR,EAAqBC,SAArB,QAAqC,OAArC;AAEA,SAAQC,QAAR,QAAuB,iBAAvB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAAQC,WAAR,QAA0B,eAA1B;AAEA,eAAe,SAASC,SAAT,GAAsB;AAEnC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,KAAK,CAACS,QAAN,CAAwB,EAAxB,CAA1B;AAEA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,KAAK,CAACS,QAAN,CAAwB,IAAxB,CAAtC;AAGA,QAAMG,OAAO,GAAG,CACd;AAAEC,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,KAAK,EAAE;AAAxB,GADc,EAEd;AAAED,IAAAA,KAAK,EAAE,aAAT;AAAwBC,IAAAA,KAAK,EAAE;AAA/B,GAFc,EAGd;AAAED,IAAAA,KAAK,EAAE,YAAT;AAAuBC,IAAAA,KAAK,EAAE;AAA9B,GAHc,CAAhB;AAMA,QAAMC,iBAAiB,GAAGd,WAAW,CAAEe,EAAE,IACrCR,QAAQ,CAACD,KAAK,CAACU,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaH,EAAlC,CAAD,CADyB,EACgB,CAACT,KAAD,CADhB,CAArC;AAIA,QAAMa,WAAW,GAAGnB,WAAW,CAAEiB,IAAI,IACjCV,QAAQ,CAACD,KAAK,CAACc,MAAN,CAAaH,IAAb,CAAD,CADmB,EACG,CAACX,KAAD,CADH,CAA/B;AAKAL,EAAAA,SAAS,CAAC,MAAM;AAEZC,IAAAA,QAAQ,GACPmB,IADD,CACM,CAAC;AAACC,MAAAA,IAAI,EAAE;AAAChB,QAAAA;AAAD;AAAP,KAAD,KAAoC;AACxC,YAAMiB,QAAQ,GAAGjB,KAAjB;AACDC,MAAAA,QAAQ,CAACgB,QAAD,CAAR;AACA,KAJD,EAKCC,KALD,CAKQC,GAAD,IAAgBC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALvB;AAMH,GARQ,EAQN,EARM,CAAT;AAUM,sBACF,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAC,QAArB;AAA8B,IAAA,OAAO,EAAEd,OAAvC;AAAgD,IAAA,IAAI,EAAEL,KAAtD;AACe,IAAA,UAAU,EAAE,CAACsB,KAAD,EAAQC,WAAR,KAAwBzB,WAAW,CAACyB,WAAD,CAD9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADE;AAQP","sourcesContent":["import * as React from \"react\"\nimport {useCallback, useEffect} from \"react\"\nimport {ITodo} from \"../types/type.todo\"\nimport {getTodos} from \"../api/requests\"\nimport MaterialTable from \"material-table\"\nimport {SelectedRow} from \"./SelectedRow\"\n\nexport default function ShowTodos () {\n\n  const [todos, setTodos] = React.useState<ITodo[]>([]);\n\n  const [dialogState, setDialogState] = React.useState<boolean>(true);\n\n\n  const headers = [\n    { title: 'name', field: 'name'},\n    { title: 'description', field: 'text'},\n    { title: 'created at', field: 'createdAt'}\n  ]\n\n  const handleStateChange = useCallback( id =>\n      setTodos(todos.filter(todo => todo._id !== id)), [todos]\n  )\n\n  const updateTodos = useCallback( todo =>\n      setTodos(todos.concat(todo)), [todos]\n  )\n\n\n  useEffect(() => {\n\n      getTodos()\n      .then(({data: {todos}}: ITodo[] | any) => {\n        const todoList = todos\n       setTodos(todoList)\n      })\n      .catch((err: Error) => console.log(err))\n  }, [])\n\n        return (\n      <MaterialTable title=\"To Dos\" columns={headers} data={todos}\n                     onRowClick={(event, selectedRow) => SelectedRow(selectedRow)}/>\n\n\n\n  );\n\n}"]},"metadata":{},"sourceType":"module"}