{"ast":null,"code":"var _jsxFileName = \"/Users/nessa.kennedy/myprojects/todos/client/src/components/ShowTodos.tsx\";\nimport * as React from \"react\";\nimport { forwardRef, useCallback, useEffect } from \"react\";\nimport { deleteTodoById, getTodos, updateTodo } from \"../api/requests\";\nimport { TextField } from \"@material-ui/core\";\nimport MaterialTable from \"material-table\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Button from \"@material-ui/core/Button\";\nimport { useConfirm } from \"material-ui-confirm\";\nexport default function ShowTodos() {\n  const [todos, setTodos] = React.useState([]);\n  const [todo, setTodo] = React.useState({\n    _id: \"\",\n    name: \"\",\n    text: \"\",\n    status: false,\n    createdAt: \"\"\n  });\n  const [dialogState, setDialogState] = React.useState(false);\n  const confirmClick = useConfirm();\n  const headers = [{\n    title: 'name',\n    field: 'name'\n  }, {\n    title: 'description',\n    field: 'text'\n  }, {\n    title: 'created at',\n    field: 'createdAt'\n  }];\n  const tableIcons = {\n    Delete: forwardRef((props, ref) => /*#__PURE__*/React.createElement(DeleteIcon, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 40\n      }\n    })))\n  };\n  const handleStateChange = useCallback(id => setTodos(todos.filter(todo => todo._id !== id)), [todos]);\n  const updateTodos = useCallback(todo => setTodos(todos.concat(todo)), [todos]);\n  useEffect(() => {\n    getTodos().then(({\n      data: {\n        todos\n      }\n    }) => {\n      const todoList = todos;\n      setTodos(todoList);\n    }).catch(err => console.log(err));\n  }, []);\n\n  const handleUpdate = todo => {\n    confirmClick({\n      description: 'This action is permanent!'\n    }).then(() => updateTodo(todo)).then(() => updateTodos).catch(err => console.log(err));\n  };\n\n  const handleDelete = id => {\n    console.log(id);\n    deleteTodoById(id).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MaterialTable, {\n    title: \"To Dos\",\n    columns: headers,\n    data: todos,\n    icons: tableIcons,\n    options: {\n      pageSize: 20\n    },\n    onRowClick: (event, rowData) => {\n      setDialogState(true);\n      setTodo({\n        _id: rowData._id,\n        name: rowData.name,\n        text: rowData.text,\n        status: rowData.status,\n        createdAt: rowData.createdAt\n      });\n    },\n    actions: [{\n      icon: DeleteIcon,\n      tooltip: 'Delete Item',\n      onClick: (event, rowData) => {\n        window.confirm(\"You want to delete \" + rowData.name + \"?\");\n        handleDelete(rowData._id);\n      }\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Dialog, {\n    open: dialogState,\n    onClose: () => setDialogState(false),\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, \"Update\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    defaultValue: todo.text,\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"name\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: () => setDialogState(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: () => {\n      handleUpdate(todo);\n      setDialogState(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, \"Update\"))));\n}","map":{"version":3,"sources":["/Users/nessa.kennedy/myprojects/todos/client/src/components/ShowTodos.tsx"],"names":["React","forwardRef","useCallback","useEffect","deleteTodoById","getTodos","updateTodo","TextField","MaterialTable","Dialog","DialogTitle","DialogContent","DialogActions","DeleteIcon","Button","useConfirm","ShowTodos","todos","setTodos","useState","todo","setTodo","_id","name","text","status","createdAt","dialogState","setDialogState","confirmClick","headers","title","field","tableIcons","Delete","props","ref","handleStateChange","id","filter","updateTodos","concat","then","data","todoList","catch","err","console","log","handleUpdate","description","handleDelete","pageSize","event","rowData","icon","tooltip","onClick","window","confirm"],"mappings":"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","sourcesContent":["import * as React from \"react\"\nimport {forwardRef, useCallback, useEffect} from \"react\"\nimport {ITodo} from \"../types/type.todo\"\nimport {deleteTodoById, getTodos, updateTodo} from \"../api/requests\"\nimport {TextField} from \"@material-ui/core\"\nimport MaterialTable, {Icons} from \"material-table\"\nimport Dialog from \"@material-ui/core/Dialog\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport DialogActions from \"@material-ui/core/DialogActions\"\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Button from \"@material-ui/core/Button\"\nimport {useConfirm} from \"material-ui-confirm\"\n\nexport default function ShowTodos () {\n\n  const [todos, setTodos] = React.useState<ITodo[]>([]);\n\n  const [todo, setTodo] = React.useState<ITodo>({\n    _id: \"\",\n    name: \"\",\n    text: \"\",\n    status: false,\n    createdAt: \"\"\n  });\n\n  const [dialogState, setDialogState] = React.useState<boolean>(false);\n\n  const confirmClick = useConfirm();\n\n  const headers = [\n    { title: 'name', field: 'name'},\n    { title: 'description', field: 'text'},\n    { title: 'created at', field: 'createdAt'}\n  ]\n\n\n  const tableIcons: Icons = {\n    Delete: forwardRef((props, ref) => <DeleteIcon {...props} ref={ref} />)\n\n  }\n\n  const handleStateChange = useCallback( id =>\n      setTodos(todos.filter(todo => todo._id !== id)), [todos]\n  )\n\n  const updateTodos = useCallback( todo =>\n      setTodos(todos.concat(todo)), [todos]\n  )\n\n\n  useEffect(() => {\n\n      getTodos()\n      .then(({data: {todos}}: ITodo[] | any) => {\n        const todoList = todos\n       setTodos(todoList)\n      })\n      .catch((err: Error) => console.log(err))\n  }, [])\n\n  const handleUpdate = (todo: ITodo) => {\n\n    confirmClick({ description: 'This action is permanent!' })\n    .then(() =>  updateTodo(todo))\n    .then(() => updateTodos)\n    .catch((err: Error) => console.log(err))\n\n  }\n\n  const handleDelete = (id: string) => {\nconsole.log(id)\n    deleteTodoById(id)\n    .catch((err: Error) => console.log(err))\n\n  }\n        return (\n            <>\n      <MaterialTable title=\"To Dos\" columns={headers} data={todos}\n                     icons={tableIcons}\n                     options={{\n                       pageSize:20\n                     }}\n                     onRowClick={(event, rowData) => {\n\n                      setDialogState(true);\n                     setTodo({_id: rowData._id,\n                       name: rowData.name,\n                       text: rowData.text,\n                       status: rowData.status,\n                       createdAt: rowData.createdAt\n                     })\n                     }}\n                     actions={[\n                       {\n                         icon: DeleteIcon,\n                         tooltip: 'Delete Item',\n                         onClick: (event, rowData: ITodo) => {\n                           window.confirm(\"You want to delete \" + rowData.name + \"?\");\n                           handleDelete(rowData._id)\n\n                         }\n                       }\n                     ]}\n      />\n\n  <Dialog\n      open={dialogState}\n      onClose={() => setDialogState(false)}\n      aria-labelledby=\"form-dialog-title\"\n  >\n    <DialogTitle id=\"form-dialog-title\">Update</DialogTitle>\n    <DialogContent>\n      <TextField\n          defaultValue={todo.text}\n          autoFocus\n          margin=\"dense\"\n          id=\"name\"\n          fullWidth\n      />\n    </DialogContent>\n    <DialogActions>\n      <Button color=\"primary\" onClick={() => setDialogState(false)}>\n        Cancel\n      </Button>\n      <Button color=\"primary\" onClick={() => {\n        handleUpdate(todo)\n        setDialogState(false)\n      }}>\n        Update\n      </Button>\n    </DialogActions>\n  </Dialog>\n</>\n  );\n\n}"]},"metadata":{},"sourceType":"module"}