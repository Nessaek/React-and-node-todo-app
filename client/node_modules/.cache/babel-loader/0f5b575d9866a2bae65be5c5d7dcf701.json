{"ast":null,"code":"var _jsxFileName = \"/Users/nessa.kennedy/myprojects/todos/client/src/components/ShowTodos.tsx\";\nimport * as React from \"react\";\nimport { ListItemText, TextField } from \"@material-ui/core\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport { deleteTodoById, getTodos, updateTodo } from \"../api/requests\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Fragment, useEffect } from \"react\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport { useConfirm } from \"material-ui-confirm\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nexport default function ShowTodos() {\n  const [todos, setTodos] = React.useState([]);\n  const [selectedTodo, setSelectedTodo] = React.useState({});\n  const [dialogState, setDialogState] = React.useState(false);\n  const confirm = useConfirm();\n  useEffect(() => {\n    getTodos().then(({\n      data: {\n        todos\n      }\n    }) => {\n      const todoList = todos;\n      setTodos(todoList);\n    }).catch(err => console.log(err));\n  });\n\n  const handleConfirmation = id => {\n    confirm({\n      description: 'This action is permanent!'\n    }).then(() => {\n      deleteTodoById(id);\n    }).catch(() => {\n      /* ... */\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, todos.map(todo => /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    onClick: () => {\n      setSelectedTodo(todo);\n      console.log(\"you\", selectedTodo);\n    },\n    key: todo._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: todo.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"end\",\n    \"aria-label\": \"delete\",\n    onClick: () => handleConfirmation(todo._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(DeleteIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Dialog, {\n    open: dialogState,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, \"Update\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    defaultValue: todo.text,\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"name\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }), todo.text), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: () => setDialogState(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: () => updateTodo(selectedTodo),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, \"Update\"))))));\n}","map":{"version":3,"sources":["/Users/nessa.kennedy/myprojects/todos/client/src/components/ShowTodos.tsx"],"names":["React","ListItemText","TextField","DeleteIcon","List","ListItem","deleteTodoById","getTodos","updateTodo","IconButton","Fragment","useEffect","DialogContent","DialogTitle","Dialog","useConfirm","DialogActions","Button","ShowTodos","todos","setTodos","useState","selectedTodo","setSelectedTodo","dialogState","setDialogState","confirm","then","data","todoList","catch","err","console","log","handleConfirmation","id","description","map","todo","_id","text"],"mappings":"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","sourcesContent":["import * as React from \"react\"\nimport {ListItemText, TextField} from \"@material-ui/core\"\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport List from \"@material-ui/core/List\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport {ITodo} from \"../types/type.todo\"\nimport {deleteTodoById, getTodos, updateTodo} from \"../api/requests\"\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport {Fragment, useEffect} from \"react\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\nimport Dialog from \"@material-ui/core/Dialog\"\nimport {useConfirm} from \"material-ui-confirm\"\nimport Modal from \"@material-ui/core/Modal\"\nimport DialogActions from \"@material-ui/core/DialogActions\"\nimport Button from \"@material-ui/core/Button\"\n\nexport default function ShowTodos () {\n\n  const [todos, setTodos] = React.useState<ITodo[]>([]);\n\n  const [selectedTodo, setSelectedTodo] = React.useState<ITodo>({});\n\n  const [dialogState, setDialogState] = React.useState<boolean>(false);\n\n  const confirm = useConfirm();\n\n\n\n  useEffect(() => {\n\n      getTodos()\n      .then(({data: {todos}}: ITodo[] | any) => {\n        const todoList = todos\n       setTodos(todoList)\n      })\n      .catch((err: Error) => console.log(err))\n\n\n  })\n\n\n  const handleConfirmation = (id: string) => {\n\n    confirm({ description: 'This action is permanent!' })\n    .then(() => { deleteTodoById(id)})\n    .catch(() => { /* ... */ });\n  }\n\n\n\n  return (\n      <List>\n        {todos.map((todo: ITodo ) => (\n          <Fragment>\n              <ListItem onClick={() => {\n                setSelectedTodo(todo);\n                console.log(\"you\", selectedTodo)\n              }\n              } key={todo._id}>\n                <ListItemText\n                    primary={todo.text}\n                />\n                  <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => handleConfirmation(todo._id)}>\n                    <DeleteIcon />\n                  </IconButton>\n              </ListItem>\n            <Dialog open={dialogState} aria-labelledby=\"form-dialog-title\">\n              <DialogTitle id=\"form-dialog-title\">Update</DialogTitle>\n              <DialogContent>\n                <TextField\n                    defaultValue={todo.text}\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"name\"\n                    fullWidth\n                />{todo.text}\n              </DialogContent>\n              <DialogActions>\n                <Button color=\"primary\" onClick={() => setDialogState(false)}>\n                  Cancel\n                </Button>\n                <Button  color=\"primary\" onClick={() => updateTodo(selectedTodo)}>\n                  Update\n                </Button>\n              </DialogActions>\n            </Dialog>\n            </Fragment>\n            )\n        )}\n      </List>\n  );\n\n}"]},"metadata":{},"sourceType":"module"}