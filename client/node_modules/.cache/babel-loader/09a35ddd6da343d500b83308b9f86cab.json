{"ast":null,"code":"var _jsxFileName = \"/Users/nessa.kennedy/myprojects/todos/client/src/components/TodoItem.tsx\";\nimport { ListItemText, TextField } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport * as React from \"react\";\nimport { deleteTodoById } from \"../api/requests\";\nimport { useConfirm } from \"material-ui-confirm\";\nexport const TodoItem = ({\n  todo,\n  itemKey\n}) => {\n  console.log(todo);\n  const [dialogState, setDialogState] = React.useState(false);\n  console.log(dialogState);\n  const confirm = useConfirm();\n\n  const handleConfirmation = id => {\n    confirm({\n      description: 'This action is permanent!'\n    }).then(() => {\n      deleteTodoById(id);\n    }).then(() => setDialogState(false));\n  };\n\n  const handleClose = () => {\n    setDialogState(false);\n  };\n\n  return /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: itemKey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: todo.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"end\",\n    \"aria-label\": \"delete\",\n    onClick: () => handleConfirmation(todo._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DeleteIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Dialog, {\n    open: dialogState,\n    onClose: () => setDialogState(false),\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Update\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    defaultValue: todo.text,\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"name\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: () => {\n      // updateTodo(selectedTodo);\n      setDialogState(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"Update\"))));\n};","map":{"version":3,"sources":["/Users/nessa.kennedy/myprojects/todos/client/src/components/TodoItem.tsx"],"names":["ListItemText","TextField","IconButton","DeleteIcon","Dialog","DialogTitle","DialogContent","DialogActions","Button","ListItem","React","deleteTodoById","useConfirm","TodoItem","todo","itemKey","console","log","dialogState","setDialogState","useState","confirm","handleConfirmation","id","description","then","handleClose","text","_id"],"mappings":"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","sourcesContent":["import {ListItemText, TextField} from \"@material-ui/core\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport DeleteIcon from \"@material-ui/icons/Delete\"\nimport Dialog from \"@material-ui/core/Dialog\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport DialogActions from \"@material-ui/core/DialogActions\"\nimport Button from \"@material-ui/core/Button\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport * as React from \"react\"\nimport {deleteTodoById} from \"../api/requests\"\nimport { useConfirm } from \"material-ui-confirm\"\nimport {ITodo} from \"../types/type.todo\"\n\ntype Props =  {\n  todo: ITodo,\n  itemKey: string\n}\nexport const TodoItem: React.FC<Props> = ( {todo, itemKey}) => {\n  console.log(todo)\n  const [dialogState, setDialogState] = React.useState<boolean>(false);\n\n  console.log(dialogState)\n  const confirm = useConfirm();\n\n  const handleConfirmation = (id: string) => {\n\n    confirm({ description: 'This action is permanent!' })\n    .then(() => { deleteTodoById(id)})\n    .then(() => setDialogState(false))\n  }\n\n  const handleClose = () => {\n    setDialogState(false);\n  };\n\n  return (\n  <ListItem button key={itemKey}>\n    <ListItemText\n        primary={todo.text}\n    />\n    <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => handleConfirmation(todo._id)}>\n      <DeleteIcon />\n    </IconButton>\n\n    <Dialog open={dialogState} onClose={() => setDialogState(false)} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Update</DialogTitle>\n      <DialogContent>\n        <TextField\n            defaultValue={todo.text}\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            fullWidth\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"primary\" onClick={handleClose}>\n          Cancel\n        </Button>\n        <Button  color=\"primary\" onClick={() => {\n          // updateTodo(selectedTodo);\n          setDialogState(false)\n\n        }\n        }>\n          Update\n        </Button>\n      </DialogActions>\n    </Dialog>\n  </ListItem>\n  )\n}"]},"metadata":{},"sourceType":"module"}