{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:4000'\n});\n\nconst getTodos = async () => {\n  try {\n    const todos = await axios.get(api + '/todos');\n    return todos;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nconst addTodo = async (formData) => {\n  const todo = {\n    name: formData.name,\n    text: formData.text,\n    status: false,\n    createdAt: formData.createdAt\n  };\n  const json = JSON.stringify(todo);\n  axios.post(api + '/add-todo', {\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    },\n    json\n  }).then(response => {\n    console.log(\"jj\", response);\n  }, error => {\n    console.error(error.st);\n    throw new Error(error);\n  });\n};\n\nexport { addTodo, getTodos };","map":{"version":3,"sources":["/Users/nessa.kennedy/myprojects/todos/client/src/api/requests.ts"],"names":["axios","api","create","baseURL","getTodos","todos","get","error","Error","addTodo","formData","todo","name","text","status","createdAt","json","JSON","stringify","post","headers","then","response","console","log","st"],"mappings":"AAAA,OAAOA,KAAP,MAAmC,OAAnC;AAGA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAa;AACvBC,EAAAA,OAAO,EAAE;AADc,CAAb,CAAZ;;AAIA,MAAMC,QAAQ,GAAG,YAA6C;AAC5D,MAAI;AACF,UAAMC,KAA6B,GAAG,MAAML,KAAK,CAACM,GAAN,CACxCL,GAAG,GAAG,QADkC,CAA5C;AAGA,WAAOI,KAAP;AACD,GALD,CAKE,OAAOE,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACD;AACF,CATD;;AAWA,MAAME,OAAO,GAAG,OACZC,QADY,KAEI;AAChB,QAAMC,IAAwB,GAAG;AAC/BC,IAAAA,IAAI,EAAEF,QAAQ,CAACE,IADgB;AAE/BC,IAAAA,IAAI,EAAEH,QAAQ,CAACG,IAFgB;AAG/BC,IAAAA,MAAM,EAAE,KAHuB;AAI/BC,IAAAA,SAAS,EAAEL,QAAQ,CAACK;AAJW,GAAjC;AAOA,QAAMC,IAAY,GAAGC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAArB;AAEAX,EAAAA,KAAK,CAACmB,IAAN,CACIlB,GAAG,GAAG,WADV,EACuB;AACjBmB,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,gBAAU;AAFH,KADQ;AAKjBJ,IAAAA;AALiB,GADvB,EAQEK,IARF,CAQQC,QAAQ,IAAI;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBF,QAAlB;AAED,GAXL,EAYIf,KAAD,IAAW;AACZgB,IAAAA,OAAO,CAAChB,KAAR,CAAcA,KAAK,CAACkB,EAApB;AACA,UAAM,IAAIjB,KAAJ,CAAUD,KAAV,CAAN;AACD,GAfD;AAiBD,CA7BH;;AAiCA,SACEE,OADF,EAEEL,QAFF","sourcesContent":["import axios, {AxiosResponse} from 'axios'\nimport {ITodo} from \"../types/type.todo\"\n\nconst api = axios.create({\n  baseURL: 'http://localhost:4000',\n});\n\nconst getTodos = async (): Promise<AxiosResponse<ITodo[]>> => {\n  try {\n    const todos: AxiosResponse<ITodo[]> = await axios.get(\n        api + '/todos'\n    )\n    return todos\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\nconst addTodo = async (\n    formData: ITodo\n): Promise<void> => {\n    const todo: Omit<ITodo, '_id'> = {\n      name: formData.name,\n      text: formData.text,\n      status: false,\n      createdAt: formData.createdAt\n    }\n\n    const json: string = JSON.stringify(todo)\n\n    axios.post(\n        api + '/add-todo', {\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          },\n          json\n        }\n    ).then((response => {\n          console.log(\"jj\", response)\n\n        }\n    ), (error) => {\n      console.error(error.st)\n      throw new Error(error)\n    })\n\n  }\n\n\n\nexport {\n  addTodo,\n  getTodos\n}"]},"metadata":{},"sourceType":"module"}