{"ast":null,"code":"var _jsxFileName = \"/Users/nessa.kennedy/myprojects/todos/client/src/components/ShowTodos.tsx\";\nimport * as React from \"react\";\nimport { ListItemText } from \"@material-ui/core\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport { deleteTodoById, getTodos } from \"../api/requests\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { useEffect } from \"react\";\nimport { useConfirm } from \"material-ui-confirm\";\nimport Modal from \"@material-ui/core/Modal\";\nexport default function ShowTodos() {\n  const [todos, setTodos] = React.useState([]);\n  const [selectedTodo, updateTodoState] = React.useState();\n  const [modalState, setModalState] = React.useState(false);\n  const confirm = useConfirm();\n  useEffect(() => {\n    getTodos().then(({\n      data: {\n        todos\n      }\n    }) => {\n      const todoList = todos;\n      setTodos(todoList);\n    }).catch(err => console.log(err));\n  });\n\n  const handleConfirmation = id => {\n    confirm({\n      description: 'This action is permanent!'\n    }).then(() => {\n      deleteTodoById(id);\n    }).catch(() => {\n      /* ... */\n    });\n  };\n\n  const openModal = todo => {\n    console.log(\"got here\");\n    setModalState(true);\n    return /*#__PURE__*/React.createElement(Modal, {\n      open: modalState,\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 6\n      }\n    }, todo.text));\n  };\n\n  return /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, todos.map(todo => /*#__PURE__*/React.createElement(ListItem, {\n    onClick: () => openModal(todo),\n    key: todo._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: todo.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"end\",\n    \"aria-label\": \"delete\",\n    onClick: () => handleConfirmation(todo._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(DeleteIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/nessa.kennedy/myprojects/todos/client/src/components/ShowTodos.tsx"],"names":["React","ListItemText","DeleteIcon","List","ListItem","deleteTodoById","getTodos","IconButton","useEffect","useConfirm","Modal","ShowTodos","todos","setTodos","useState","selectedTodo","updateTodoState","modalState","setModalState","confirm","then","data","todoList","catch","err","console","log","handleConfirmation","id","description","openModal","todo","text","map","_id"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAQC,YAAR,QAA2B,mBAA3B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAEA,SAAQC,cAAR,EAAwBC,QAAxB,QAAuC,iBAAvC;AAEA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAAQC,SAAR,QAAwB,OAAxB;AAIA,SAAQC,UAAR,QAAyB,qBAAzB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AAEA,eAAe,SAASC,SAAT,GAAsB;AAEnC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,KAAK,CAACc,QAAN,CAAwB,EAAxB,CAA1B;AAEA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkChB,KAAK,CAACc,QAAN,EAAxC;AAEA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BlB,KAAK,CAACc,QAAN,CAAwB,KAAxB,CAApC;AAEA,QAAMK,OAAO,GAAGV,UAAU,EAA1B;AAIAD,EAAAA,SAAS,CAAC,MAAM;AAEZF,IAAAA,QAAQ,GACPc,IADD,CACM,CAAC;AAACC,MAAAA,IAAI,EAAE;AAACT,QAAAA;AAAD;AAAP,KAAD,KAAoC;AACxC,YAAMU,QAAQ,GAAGV,KAAjB;AACDC,MAAAA,QAAQ,CAACS,QAAD,CAAR;AACA,KAJD,EAKCC,KALD,CAKQC,GAAD,IAAgBC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALvB;AAQH,GAVQ,CAAT;;AAaA,QAAMG,kBAAkB,GAAIC,EAAD,IAAgB;AAEzCT,IAAAA,OAAO,CAAC;AAAEU,MAAAA,WAAW,EAAE;AAAf,KAAD,CAAP,CACCT,IADD,CACM,MAAM;AAAEf,MAAAA,cAAc,CAACuB,EAAD,CAAd;AAAmB,KADjC,EAECL,KAFD,CAEO,MAAM;AAAE;AAAW,KAF1B;AAGD,GALD;;AAQA,QAAMO,SAAS,GAAIC,IAAD,IAAiB;AACrCN,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACIR,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,wBAAO,oBAAC,KAAD;AACF,MAAA,IAAI,EAAED,UADJ;AAEF,yBAAgB,oBAFd;AAGF,0BAAiB,0BAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIc,IAAI,CAACC,IAAT,CAJK,CAAP;AAMA,GATD;;AAYA,sBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGpB,KAAK,CAACqB,GAAN,CAAWF,IAAD,iBACL,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAE,MAAMD,SAAS,CAACC,IAAD,CAAlC;AAA0C,IAAA,GAAG,EAAEA,IAAI,CAACG,GAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AACI,IAAA,OAAO,EAAEH,IAAI,CAACC,IADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAKI,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,KAAjB;AAAuB,kBAAW,QAAlC;AAA2C,IAAA,OAAO,EAAE,MAAML,kBAAkB,CAACI,IAAI,CAACG,GAAN,CAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALJ,CADL,CADH,CADJ;AAiBD","sourcesContent":["import * as React from \"react\"\nimport {ListItemText} from \"@material-ui/core\"\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport List from \"@material-ui/core/List\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport {ITodo} from \"../types/type.todo\"\nimport {deleteTodoById, getTodos} from \"../api/requests\"\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport {useEffect} from \"react\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\nimport Dialog from \"@material-ui/core/Dialog\"\nimport {useConfirm} from \"material-ui-confirm\"\nimport Modal from \"@material-ui/core/Modal\"\n\nexport default function ShowTodos () {\n\n  const [todos, setTodos] = React.useState<ITodo[]>([]);\n\n  const [selectedTodo, updateTodoState] = React.useState<ITodo>();\n\n  const [modalState, setModalState] = React.useState<boolean>(false);\n\n  const confirm = useConfirm();\n\n\n\n  useEffect(() => {\n\n      getTodos()\n      .then(({data: {todos}}: ITodo[] | any) => {\n        const todoList = todos\n       setTodos(todoList)\n      })\n      .catch((err: Error) => console.log(err))\n\n\n  })\n\n\n  const handleConfirmation = (id: string) => {\n\n    confirm({ description: 'This action is permanent!' })\n    .then(() => { deleteTodoById(id)})\n    .catch(() => { /* ... */ });\n  }\n\n\n  const openModal = (todo: ITodo) => {\nconsole.log(\"got here\")\n    setModalState(true)\n   return <Modal\n        open={modalState}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n    ><p>{todo.text}</p>\n    </Modal>\n  }\n\n\n  return (\n      <List>\n        {todos.map((todo: ITodo ) => (\n              <ListItem onClick={() => openModal(todo)} key={todo._id}>\n                <ListItemText\n                    primary={todo.text}\n\n                />\n                  <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => handleConfirmation(todo._id)}>\n                    <DeleteIcon />\n                  </IconButton>\n              </ListItem>\n            )\n        )}\n      </List>\n  );\n\n}"]},"metadata":{},"sourceType":"module"}