{"ast":null,"code":"var _jsxFileName = \"/Users/nessa.kennedy/myprojects/todos/client/src/components/ShowTodos.tsx\";\nimport * as React from \"react\";\nimport { useCallback, useEffect } from \"react\";\nimport List from \"@material-ui/core/List\";\nimport { getTodos } from \"../api/requests\";\nimport { TodoItem } from \"./TodoItem\";\nimport { AddTodo } from \"./AddTodo\";\nexport default function ShowTodos() {\n  const [todos, setTodos] = React.useState([]);\n  const handleStateChange = useCallback(id => setTodos(todos.filter(todo => todo._id !== id)), [todos]);\n  const updateTodos = useCallback(todo => setTodos(todos.concat(todo)), [todos]);\n  useEffect(() => {\n    getTodos().then(({\n      data: {\n        todos\n      }\n    }) => {\n      const todoList = todos;\n      setTodos(todoList);\n    }).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AddTodo, {\n    onAdd: updateTodos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, todos.map((todo, key) => /*#__PURE__*/React.createElement(TodoItem, {\n    todo: todo,\n    itemKey: key,\n    onDelete: handleStateChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/nessa.kennedy/myprojects/todos/client/src/components/ShowTodos.tsx"],"names":["React","useCallback","useEffect","List","getTodos","TodoItem","AddTodo","ShowTodos","todos","setTodos","useState","handleStateChange","id","filter","todo","_id","updateTodos","concat","then","data","todoList","catch","err","console","log","map","key"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAQC,WAAR,EAAqBC,SAArB,QAAqC,OAArC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,SAAQC,QAAR,QAAuB,iBAAvB;AACA,SAAQC,QAAR,QAAuB,YAAvB;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,eAAe,SAASC,SAAT,GAAsB;AAEnC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,KAAK,CAACU,QAAN,CAAwB,EAAxB,CAA1B;AAEA,QAAMC,iBAAiB,GAAGV,WAAW,CAAEW,EAAE,IACrCH,QAAQ,CAACD,KAAK,CAACK,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaH,EAAlC,CAAD,CADyB,EACgB,CAACJ,KAAD,CADhB,CAArC;AAIA,QAAMQ,WAAW,GAAGf,WAAW,CAAEa,IAAI,IACjCL,QAAQ,CAACD,KAAK,CAACS,MAAN,CAAaH,IAAb,CAAD,CADmB,EACG,CAACN,KAAD,CADH,CAA/B;AAKAN,EAAAA,SAAS,CAAC,MAAM;AAEZE,IAAAA,QAAQ,GACPc,IADD,CACM,CAAC;AAACC,MAAAA,IAAI,EAAE;AAACX,QAAAA;AAAD;AAAP,KAAD,KAAoC;AACxC,YAAMY,QAAQ,GAAGZ,KAAjB;AACDC,MAAAA,QAAQ,CAACW,QAAD,CAAR;AACA,KAJD,EAKCC,KALD,CAKQC,GAAD,IAAgBC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALvB;AAMH,GARQ,EAQN,EARM,CAAT;AAWA,sBACI,uDACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEN,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,KAAK,CAACiB,GAAN,CAAU,CAACX,IAAD,EAAcY,GAAd,kBACL,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEZ,IAAhB;AAAsB,IAAA,OAAO,EAAEY,GAA/B;AAAoC,IAAA,QAAQ,EAAEf,iBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADL,CADH,CAFA,CADJ;AAWD","sourcesContent":["import * as React from \"react\"\nimport {useCallback, useEffect} from \"react\"\nimport List from \"@material-ui/core/List\"\nimport {ITodo} from \"../types/type.todo\"\nimport {getTodos} from \"../api/requests\"\nimport {TodoItem} from \"./TodoItem\"\nimport { AddTodo } from \"./AddTodo\"\n\nexport default function ShowTodos () {\n\n  const [todos, setTodos] = React.useState<ITodo[]>([]);\n\n  const handleStateChange = useCallback( id =>\n      setTodos(todos.filter(todo => todo._id !== id)), [todos]\n  )\n\n  const updateTodos = useCallback( todo =>\n      setTodos(todos.concat(todo)), [todos]\n  )\n\n\n  useEffect(() => {\n\n      getTodos()\n      .then(({data: {todos}}: ITodo[] | any) => {\n        const todoList = todos\n       setTodos(todoList)\n      })\n      .catch((err: Error) => console.log(err))\n  }, [])\n\n\n  return (\n      <>\n        <AddTodo onAdd={updateTodos}/>\n      <List>\n        {todos.map((todo: ITodo, key ) =>\n              <TodoItem todo={todo} itemKey={key} onDelete={handleStateChange}/>\n        )}\n      </List>\n        </>\n  );\n\n}"]},"metadata":{},"sourceType":"module"}